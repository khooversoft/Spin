#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

byte[] four_bytes = System.Security.Cryptography.RandomNumberGenerator.GetBytes(4);

// four_bytes[2] = 0;
// four_bytes[3] = 0;
uint rand = BitConverter.ToUInt32(four_bytes, 0);

string randString = rand.ToString("X8");
Console.WriteLine($"rand={randString}");
Console.WriteLine($"ticks={DateTime.UtcNow.Ticks}");

#!csharp

using System;

long longNumber = 123456789012345;
int maxIntValue = int.MaxValue;

// Reduce the long number
double scalingFactor = (double)longNumber / maxIntValue;

// Reduce the long number
int reducedInt = (int)(longNumber / scalingFactor);

Console.WriteLine($"Reduced Long: {reducedLong}");
Console.WriteLine($"Reduced Int: {reducedInt}");

static long GCD(long a, long b)
{
    while (b != 0)
    {
        long temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}
