@using TicketShareWeb.Application

<div class="toolbar-panel">
    <FluentToolbar>
        @foreach (IElement element in Elements)
        {
            switch (element)
            {
                case ButtonElement buttonElement:
                    <FluentButton
                        Appearance=buttonElement.Appearance
                        OnClick=buttonElement.Callback
                        IconStart=buttonElement.StartEnd
                        IconEnd=buttonElement.IconEnd
                        Disabled=buttonElement.Disabled
                    >@buttonElement.Text</FluentButton>
                    break;
            };
        }

        @*     <FluentButton Appearance="Appearance.Accent">Accent Button</FluentButton>
        <FluentButton Appearance="Appearance.Stealth">Stealth Button</FluentButton>
        <FluentRadioGroup @bind-Value=value1>
        <FluentRadio Value=@("one") Checked="true">One</FluentRadio>
        <FluentRadio Value=@("two")>Two</FluentRadio>
        <FluentRadio Value=@("three")>Three</FluentRadio>
        </FluentRadioGroup>
        <FluentMenuButton @ref=menubutton Text="Select brand color" Items="@items" OnMenuChanged="HandleOnMenuChanged"></FluentMenuButton>

        <FluentButton>Button</FluentButton>

        <FluentInputLabel ForId="s1" Orientation="Orientation.Horizontal">Select something</FluentInputLabel>
        <FluentSelect Id="s1" Class="below outline" @bind-Value="@comboboxValue" TOption="string">
        <FluentOption id="option-15">Option 1</FluentOption>
        <FluentOption id="option-16">Second option</FluentOption>
        <FluentOption id="option-17">Option 3</FluentOption>
        </FluentSelect>

        <FluentCheckbox @bind-Value=check1>Checkbox</FluentCheckbox>
        *@
    </FluentToolbar>
</div>
@* <hr class="border" /> *@

@code {
    [Parameter] public IReadOnlyList<IElement> Elements { get; set; } = null!;

    // string? comboboxValue;
    // FluentToolbar? Toolbar;
    // string? value1 = "one", value2 = "two", value3;
    // bool check1;
    // string? text1;

    // private FluentMenuButton menubutton = new();

    // private Dictionary<string, string> items = new Dictionary<string, string>()
    // {
    //     {"0078D4","Windows"},
    //     {"D83B01","Office"},
    //     {"464EB8","Teams"},
    //     {"107C10","Xbox"},
    //     {"8661C5","Visual Studio"},
    //     {"F2C811","Power BI"},
    //     {"0066FF","Power Automate"},
    //     {"742774","Power Apps"},
    //     {"0B556A","Power Virtual Agents"}
    // };

    // private void HandleOnMenuChanged(MenuChangeEventArgs args)
    // {


    // }
}
