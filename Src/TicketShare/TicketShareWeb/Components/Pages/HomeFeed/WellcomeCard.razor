@inject UserAccountManager _userAccountManager
@inject ILogger<WellcomeCard> _logger
@rendermode InteractiveServer

<FluentCard Class="card-container" Width="380px">
    <img class="card-image" src="images/SharringTickets.webp">
    <p class="intro-text">
        This feed offers a timeline of all your activities. In the account section,
        you can update your personal information. Ticket groups allow you to manage
        and share collections of tickets. The messages section is for your
        conversations.
    </p>
    <p style="margin: 10px 0px 0px 0px">
        Email validate is required for access and to receive notifications.
    </p>
</FluentCard>

@code {
    // private bool _isAccountActive = false;
    // private bool _show = false;

    // protected override async Task OnInitializedAsync()
    // {
    //     var context = new ScopeContext(_logger);
    //     _isAccountActive = await _userAccountManager.IsAccountEnabled(context).ConfigureAwait(false);
    // }

    // protected override void OnAfterRender(bool firstRender)
    // {
    //     if (firstRender) _show = true;
    // }
}
