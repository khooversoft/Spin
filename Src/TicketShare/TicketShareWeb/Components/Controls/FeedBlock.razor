<div class="feed-block-container feed-block-border">
    @if (_isMenuBar)
    {
        <FluentToolbar Class="feed-block-toolbar">
            @if (Title.IsNotEmpty())
            {
                <FluentLabel Typo="Typography.Subject">@Title</FluentLabel>
            }

            <FluentSpacer />

            @if (OnAdd.HasDelegate)
            {
                <FluentButton IconStart="@(new Icons.Regular.Size20.Add())"
                              Appearance="Appearance.Outline"
                              OnClick="GotoAdd" />
            }

            @if (OnEdit.HasDelegate)
            {
                <FluentButton IconStart="@(new Icons.Regular.Size20.Edit())"
                              Appearance="Appearance.Outline"
                              OnClick="GotoEdit" />
            }
        </FluentToolbar>
    }

    <div class=@_contentClass>
        @ChildContent
    </div>
</div>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; } = null!;
    [Parameter] public EventCallback OnEdit { get; set; }
    [Parameter] public EventCallback OnAdd { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Class { get; set; }

    private bool _isMenuBar;
    private string _contentClass = null!;

    protected override void OnParametersSet()
    {
        _isMenuBar = Title.IsNotEmpty() || OnAdd.HasDelegate || OnEdit.HasDelegate;
        _contentClass = Class.IsNotEmpty() ? Class : "feed-block-content";
    }

    private Task GotoAdd() => OnAdd.InvokeAsync();
    private Task GotoEdit() => OnEdit.InvokeAsync();
}
