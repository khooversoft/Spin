<hr class="hr-divider" />

<FluentStack Orientation="Orientation.Horizontal">
    <FluentButton Appearance="Appearance.Outline"
                  IconStart="@(new Icons.Regular.Size20.Save())"
                  OnClick="SetClick">
        Save
    </FluentButton>


    <FluentButton Appearance="Appearance.Outline"
                  IconStart="@(new Icons.Regular.Size20.ArrowUndo())"
                  OnClick="CloseClick">
        Close
    </FluentButton>

    @if (ShowDelete)
    {
        <FluentSpacer />

        <FluentButton Appearance="Appearance.Outline"
                      IconStart="@(new Icons.Regular.Size20.Delete())"
                      OnClick="DeleteClick">
            Delete
        </FluentButton>
    }
</FluentStack>

@code {
    [Parameter] public EventCallback OnSet { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public bool ShowDelete { get; set; }

    private async Task CloseClick() => await OnClose.InvokeAsync();
    private async Task SetClick() => await OnSet.InvokeAsync();

    private async Task DeleteClick()
    {
        if (ShowDelete) await OnDelete.InvokeAsync();
    }
}