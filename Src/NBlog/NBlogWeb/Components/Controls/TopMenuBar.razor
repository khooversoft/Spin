@using NBlog.sdk
@using Toolbox.Extensions
@using Toolbox.Tools
@using Toolbox.Types
@rendermode InteractiveServer

<header class="navbar navbar-expand-lg navbar-light bd-navbar sticky-top">
    <nav class="container-xxl flex-wrap flex-lg-nowrap" aria-label="Main navigation">
        <div class="d-lg-none" style="width: 2.24rem;"></div>
        <dev>
            <a href="">
                <img src="/Images/khicon.svg" class="img-fluid" style="max-width: 64px;" aria-label="KH" />
            </a>
        </dev>
        <div>
            <span class="collapse navbar-collapse" style="color:black;margin-right:30px;font-size:.9rem">Kelvin Hoover</span>
        </div>

        @if (_flow.State == 2)
        {
            <div>
                <span style="color: black;font-size:1.6rem;font-weight:600;font-style:italic">@_title</span>
            </div>
        }

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <dev class="collapse navbar-collapse" id="navbarSupportedContent">
            @if (_flow.State == 2)
            {
                <ul class="navbar-nav ms-auto mb-lg-0 mx-4">
                    @foreach (var item in _menus)
                    {
                        <li class="nav-item">
                            <a class="nav-link active" href="@item.HRef">@item.Title</a>
                        </li>
                    }

                    <li class="nav-item">
                        <a class="nav-link active" href="@_contactUrl">Contact</a>
                    </li>
                </ul>
            }

            <div class="d-flex">
                <input class="form-control me-2" placeholder="Search" aria-label="Search" @oninput=OnSearchInput @bind=_searchText @onkeydown="OnSearchKeyPress" />
                <button class="btn btn-outline-dark" @onclick=SearchEvent>Search</button>
            </div>
        </dev>
    </nav>
</header>

@code {
    [Parameter] public string? DbName { get; init; }

    [Inject] private NavigationManager _navManager { get; init; } = null!;
    [Inject] private ConfigurationService _configurationService { get; init; } = null!;
    [Inject] private ILogger<TopMenuBar> _logger { get; init; } = null!;

    private SequentialState _flow = new SequentialState();
    private NBlogConfiguration _configuration = null!;
    private string _title = "";
    private IReadOnlyList<OverviewMenu> _menus = Array.Empty<OverviewMenu>();
    private string _searchText = string.Empty;
    private string _contactUrl = string.Empty;

    protected override void OnInitialized() => _contactUrl = $"/contact/{DbName}";

    private void SearchEvent()
    {
        if (_searchText.IsEmpty() || DbName.IsEmpty()) return;

        _navManager.NavigateTo(NavRoutes.GotoSearch(DbName, _searchText), true);
    }

    private void OnSearchInput(ChangeEventArgs e) => _searchText = e.Value?.ToString() ?? string.Empty;

    private void OnSearchKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter") SearchEvent();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _flow.Reset();
            await Load();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task Load()
    {
        var context = new ScopeContext(_logger);
        if (!_flow.MoveState(1)) return;

        try
        {
            if (DbName == null) return;
            _configuration = await _configurationService.Get(DbName, context);

            _title = _configuration.OverviewPanel.Title;
            _menus = _configuration.OverviewPanel.Menus.OrderBy(x => x.OrderIndex).Take(2).ToArray();
        }
        finally
        {
            _flow.MoveState(2);
            await InvokeAsync(() => StateHasChanged());
        }
    }
}