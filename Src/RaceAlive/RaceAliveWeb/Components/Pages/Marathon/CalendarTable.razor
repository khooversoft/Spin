@using RaceAliveWeb.Application
@using RaceAliveWeb.Components.Controls
@using RaceAlive.sdk;

<MudDataGrid T="MarathonScheduleModel"
             Items="List"
             Dense="true"
             Hover="true"
             Bordered="false"
             Elevation="0"
             Striped=true
             RowClick="RowClickEvent"
             RowStyleFunc="GetRowStyle"
             SortMode="SortMode.Multiple"
             ColumnResizeMode="ResizeMode.Container">

    <Columns>
        <PropertyColumn Property="x => x.Date" Title="Date" Format="yyyy-MM-dd" Sortable="true" />
        <PropertyColumn Property="x => x.Name" Title="Name" Sortable="true" />
        <PropertyColumn Property="x => x.City" Title="City" Sortable="true" />
        <PropertyColumn Property="x => x.CourseType" Title="CourseType" Sortable="true">
            <CellTemplate>
                @context.Item.CourseType.ToCourseTypeString()
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Finishers" Title="Finishers" Sortable="true">
            <CellTemplate>
                @context.Item.Finishers?.ToString("N0")
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.PercentQualified" Title="PercentQualified" Sortable="true">
            <CellTemplate>
                @((context.Item.PercentQualified ?? 0).ToString("P1"))
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.GetAverageRating()" Title="Reviews" Sortable="true">
            <CellTemplate>
                @if (context.Item.Reviews.Count > 0)
                {
                    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                        <MudRating ReadOnly="true" SelectedValue="@context.Item.GetAverageRating()" MaxValue="5" Size="Size.Small" />
                        <MudText Typo="Typo.body2">(@context.Item.Reviews.Count)</MudText>
                    </MudStack>
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Dark">No reviews</MudText>
                }
            </CellTemplate>
        </PropertyColumn>
    </Columns>
</MudDataGrid>

@code {
    [Parameter] public IReadOnlyList<MarathonScheduleModel> List { get; set; } = null!;
    [Parameter] public EventCallback<string> OnSelect { get; set; }
    [Parameter] public string? SelectedRowId { get; set; }

    private async Task RowClickEvent(DataGridRowClickEventArgs<MarathonScheduleModel> e)
    {
        await OnSelect.InvokeAsync(e.Item.NotNull().Id);
    }

    private string GetRowStyle(MarathonScheduleModel item, int index) =>
        SelectedRowId is not null && item.Id == SelectedRowId ? "background-color: var(--mud-palette-action-default-hover);" : string.Empty;
}
