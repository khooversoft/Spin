@page "/marathonSearch"
@using RaceAlive.sdk
@using RaceAliveWeb.Components.Controls

<div class="block-container">
    <MudText Typo="Typo.h5" GutterBottom="true">Find Your Next Finish Line!</MudText>
    <MudText Typo="Typo.body2" GutterBottom="true">
        Looking for your perfect race? Whether you’re chasing a PR,
        exploring a new city, or just want an unforgettable running experience,
        our Marathon Search makes it easy. Filter by location, date,
        terrain, and more.
    </MudText>

    <BlockToolBar title="Search Marathons" OnSearch=OnSearch OnFilter=OnFilter>
        <MarathonList List=GetMarathons() OnSelect=OnRowSelect SelectedRowId=@_id OnReviewSelect=OnReviewSelect ShowFilters=@_filter ShowAll=true />
    </BlockToolBar>
</div>

@code {
    @inject MarathonScheduleClient _scheduleClient;
    @inject NavigationManager _nav;

    private IReadOnlyList<MarathonScheduleModel> _schedules = [];

    private string? _id;
    private string? _search;
    private bool _filter = false;

    protected override async Task OnInitializedAsync()
    {
        _schedules = (await _scheduleClient.GetMarathonSchedule()).ThrowOnError().Return();
    }

    private IReadOnlyList<MarathonScheduleModel> GetMarathons() => _schedules
        .Where(x => _search.IsEmpty() || x.IsMatch(_search))
        .ToArray();

    private void OnRowSelect(string id)
    {
        _id = id;
        _nav.GotoMarathonProfile(id, NavHelper.MarathonSearchPath);
    }

    private void OnSearch(string? search) => _search = search;
    private void OnReviewSelect(string id) => _nav.GotoMarathonReview(id, NavHelper.MarathonSearchPath);
    private void OnFilter() => _filter = !_filter;
}

